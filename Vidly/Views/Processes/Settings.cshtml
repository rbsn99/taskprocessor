
@{
    ViewBag.Title = "Settings";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Settings</h2>
 

<div id="process" class="container">
    <ul class="nav nav-tabs">
        <li class="active">
            <a href="#details" data-toggle="tab">Details</a>
        </li>
        <li>
            <a href="#flow" data-toggle="tab">Flow</a>
        </li>
 
    </ul>

    <div class="tab-content ">
        <div class="tab-pane active" id="details">
 
            <form class="well form-horizontal"   method="post" id="process_details_form">
                <fieldset>

                    <!-- Form Name -->
                    <legend>Process details</legend>

                    <!-- Text input-->
                    <div class="form-group">
                        <label class="col-md-4 control-label">Process ID</label>
                        <div class="col-md-4 inputGroupContainer">
                            <input id="process_id" placeholder="Process ID" class="form-control" type="text" readonly>
                        </div>
                    </div>
                    <!-- Text input-->
                    <div class="form-group">
                        <label class="col-md-4 control-label">Process GUID</label>
                        <div class="col-md-4 inputGroupContainer">
                            <input id="process_guid" placeholder="Process GUID" class="form-control" type="text" readonly>
                        </div>
                    </div>
                    <!-- Text input-->
                    <div class="form-group">
                        <label class="col-md-4 control-label">Process Name</label>
                        <div class="col-md-4 inputGroupContainer">                            
                             <input id="process_name" placeholder="Process Name" class="form-control" type="text">                      
                        </div>
                    </div>
                    
                    <!-- Text input-->
                    <div class="form-group">
                        <label class="col-md-4 control-label">Created date</label>
                        <div class="col-md-4 inputGroupContainer">
                            <input id="created_date" placeholder="Created date" class="form-control" type="text" readonly="">
                        </div>
                    </div>

                    <!-- Button -->
                    <div class="form-group">
                        <label class="col-md-4 control-label"></label>
                        <div class="col-md-4">
                            <button type="submit" class="btn" onclick="UpdateProcessDetails();">Save</button>
                        </div>
                    </div>

                </fieldset>
            </form>

        </div>
        <!--Flow tab-->
        <div class="tab-pane" id="flow">
            <h3>Process flow</h3>
            <div id="taskTypes">
                <select class="selectpicker">
                    <!--generated by JS on load-->
                </select>
                <button class="btn">Add new task</button>
                <table id="tasks" class="table table-bordered table-hover">
                    <thead>
                        <tr>
                            <th>GUID</th>
                            <th>ID</th>
                            <th>Name</th>
                            <th>Task type</th>
                            <th>Attributes</th> 
                            <th>Recipients</th>
                            <th>Dependencies</th>                                                       
                        </tr>

                    </thead>
                    <tbody>
 
                    </tbody>
                </table>
                <button class="btn" id="updateSettingsBtn" onclick="UpdateTaskSettings();">Update settings</button>
            </div> 
        </div>
 
    </div>
</div>
 
 
 @section scripts
 {
     <script>
         $(document).ready(function () {
             var currenturl = window.location.pathname;
             var id = currenturl.substring(currenturl.lastIndexOf('/') + 1);

             LoadProcessDetails(id);
             LoadProcessTasksTypes();
             LoadProcessTasks(id);
             }
         );

         function LoadProcessTasks(id) {
             var num = 0;
             var table = $("#tasks").DataTable({
                 destroy: true,

                 ajax: {
                     url: "processtasks/" + id,
                     dataSrc: ""
                 },
                 columns: [
                     {
                         data: "ProcessTaskGuid",
                         render: function (data, type, processtask)
                         { return "<input class=\"ProcessTaskGuid\" type=\"text\" value=\" " + processtask.ProcessTaskGuid + " \" readonly>" }
                     },
                     {
                         //data: "Id",
                         //render: function (data, type, processtask)
                         render: function()
                         { return "<input class=\"Id\" type=\"text\" value=\" " + num++ + " \" readonly>" }

                     },
                     {
                         data: "TaskName",
                         render: function (data, type, processtask)
                         { return "<input class=\"TaskName\" type=\"text\" value=\" " + processtask.TaskName + " \" >" }

                     },
                     {
                         data: "ProcessTaskType.ProcessTaskTypeName",
                         render: function (data, type, processtask)
                         { return "<input class=\"ProcessTaskTypeName\" type=\"text\" value=\" " + processtask.ProcessTaskType.ProcessTaskTypeName + " \" >" }

                     },
                     {
                         data: "attributes",
                         render: function (data, type, processtask) {
                             var fullAttributeValuesList = "";
                             for (i = 0 ; i < processtask.ProcessTaskAttributes.length ; i++)
                             {
                                 fullAttributeValuesList += processtask.ProcessTaskAttributes[i].AttributeKey;
                                 fullAttributeValuesList += "=";
                                 fullAttributeValuesList += processtask.ProcessTaskAttributes[i].AttributeValue;
                                 fullAttributeValuesList += ";";

                             }
                             return "<textarea class =\"attributes\">" + fullAttributeValuesList + "</textarea>";
                         }

                     },
                     {
                         render: function (data, type, processtask)
                         { return "<input class=\"recipHolder\" type=\"text\" value=\" " + "recipHolder" + " \" >" }
                     },
                     {
                         render: function (data, type, processtask)
                         { return "<input class=\"depHolder\" type=\"text\" value=\" " + "depHolder" + " \" >" }
                     }
                 ]
             });
         }

         function LoadProcessDetails(id)
         {

             $.getJSON('/api/processes/settings/' + id,
                 function (data) {
                     document.getElementById("process_id").value = data.Id;
                     document.getElementById("process_name").value = data.ProcessName;
                     document.getElementById("process_guid").value = data.ProcessGuid;
                     document.getElementById("created_date").value = data.CreatedDate;
                 });
         }

         function LoadProcessTasksTypes() {
             //alert('test');
             $.getJSON('/api/processes/tasktypes',
                     function (data) {
                         for (i = 0; i < data.length; i++) {
                             // $('#taskTypes ul').append('<li><a href="#" data-id="' + data[i].Id + '">' + data[i].ProcessTaskTypeName + '</a></li>');
                             $('#taskTypes select').append('<option>' + data[i].ProcessTaskTypeName + '</option>');
                         }
                     });
         }

         function UpdateProcessDetails() {
             $(function () {
                 var id = document.getElementById("process_id").value;
                 var process = { ProcessName: document.getElementById("process_name").value};
                 $.ajax({
                     type: "PUT",
                     data: JSON.stringify(process),
                     url: "/api/processes/settings/" + id,
                     contentType: "application/json"
                 });
             });
         }
 
         
         function UpdateTaskSettings() {
 
             var id;
             
             $("#tasks tr").each(function () {
                    var _ProcessTaskGuid=  $(this).find("input.ProcessTaskGuid").val(),
                    _Id =                  $(this).find("input.Id").val(),
                    _TaskName =            $(this).find("input.TaskName").val(),
                    _ProcessTaskTypeName = $(this).find("input.ProcessTaskTypeName").val(),
                    _attributes =          $(this).find("textarea.attributes").val(),
                    _recipHolder =         $(this).find("input.recipHolder").val(),
                    _depHolder =           $(this).find("input.depHolder").val();
                        
                 


                    var ptu = {
                        Id : _Id,
                        ProcessTaskGuid : _ProcessTaskGuid,
                        TaskName: _TaskName,
                        ProcessTaskAttributes: _attributes,
                        ProcessTaskRecipient: _recipHolder 
                    };

                    //update call
                    id = document.getElementById("process_id").value;
  
                    
                    $.ajax({
                        type: "PUT",
                        data: JSON.stringify(ptu),
                        url: "processtasks/" + id,
                        contentType: "application/json"
                    });

                 });
          
             alert('All tasks updated!');
 
              LoadProcessTasks(id);
         }

     </script>
 }
